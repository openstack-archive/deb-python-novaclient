#!/usr/bin/make -f

DEBVERS := $(shell dpkg-parsechangelog | sed -n -e 's/^Version: //p')
VERSION := $(shell echo '$(DEBVERS)' | sed -e 's/^[[:digit:]]*://' -e 's/[~-].*//')
DEBFLAVOR :=$(shell dpkg-parsechangelog | grep -E ^Distribution: | cut -d" " -f2)
DEBPKGNAME :=$(shell dpkg-parsechangelog | grep -E ^Source: | cut -d" " -f2)

%:
	dh $@ --with python2

override_dh_auto_configure:
	echo $(VERSION) > novaclient/versioninfo
	dh_auto_configure

override_dh_auto_clean:
	echo $(VERSION) > novaclient/versioninfo
	dh_auto_clean
	rm -f novaclient/versioninfo

override_dh_auto_install:
	dh_auto_install
	rm -rf $(CURDIR)/debian/python-novaclient/usr/novaclient

get-orig-source:
	uscan --verbose --force-download --rename --destdir=../build-area

override_dh_auto_test::
ifeq (,$(filter nocheck,$(DEB_BUILD_OPTIONS)))
	set -e ; for pyversion in $(shell pyversions -r); do $$pyversion setup.py test || true ; done
endif

get-vcs-source:
	git remote add upstream git://github.com/openstack/$(DEBPKGNAME).git || true
	git fetch upstream
	if [ ! -f ../$(DEBPKGNAME)_$(VERSION).orig.tar.xz ] ; then \
		git archive --prefix=$(DEBPKGNAME)-$(VERSION)/ $(VERSION) | xz >../$(DEBPKGNAME)_$(VERSION).orig.tar.xz ; \
	fi
	if ! git checkout master ; then \
		echo "No upstream branch: checking out" ; \
		git checkout -b master upstream/master ; \
	fi
	git checkout debian/experimental
